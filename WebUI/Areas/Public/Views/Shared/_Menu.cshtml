@model WebUI.Areas.Public.Models.BasePageViewModel

<nav class="navbar navbar-default hr-navigationbar" role="navigation">
    <div class="container header-menu">

        <div class="navbar-header show-mobile">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">
                @*<img alt="Хурма" src="~/Areas/Public/content/images/logo-mobile.png"/>*@
                @Html.Partial("_LogoMobile")
            </a>
        </div>

        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <div class="navbar-header hide-mobile">
                <a class="navbar-brand" href="/">
                    @*<img alt="Хурма" src="~/Areas/Public/content/images/logo.png" />*@
                    @Html.Partial("_Logo")
                </a>
            </div>
            <ul class="nav navbar-nav">
                @foreach (var menuItem in Model.MenuItems)
                {
                    if (menuItem.SubmenuItems.Any())
                    {
                        <li class="dropdown" data-menu="horizontal-@menuItem.Id">
                            @ActiveLinkHelperResult("Category", "Content", menuItem.Title, menuItem.Id, true)
                            <ul class="dropdown-menu">
                                @*<li><a href="#">Все</a></li>*@
                                @foreach (var subItem in menuItem.SubmenuItems)
                                {
                                    <li>@ActiveLinkHelperResult("Category", "Content", subItem.Title, subItem.Id)</li>
                                }
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li>@ActiveLinkHelperResult("Category", "Content", menuItem.Title, menuItem.Id)</li>
                    }
                }
            </ul>
        </div>

    </div>
</nav>

@helper ActiveLinkHelperResult(string action, string controller, string title, int id, bool caret = false)
{
var customClass = ViewContext.RouteData.Values["action"].ToString() == action &&
               ViewContext.RouteData.Values["controller"].ToString() == controller && ViewContext.RouteData.Values["id"].ToString() == id.ToString() ? " active " : "";

if (caret)
{
    customClass += " dropdown-toggle ";
}

    <a class="@customClass" @(caret ? "data-toggle=dropdown" : "") href="@Url.Action(action, controller, new { id })">@title.Trim()  @(caret ? Html.Raw("<b class=\"caret\"></b>") : Html.Raw(""))</a>
}

<style>
    .navbar-default.hr-navigationbar .navbar-nav > li > a.active, .navbar-default.hr-navigationbar .navbar-nav > li > a:focus, .navbar-default.hr-navigationbar .navbar-nav > li > a:hover {
        color: @Model.ThemeColor !important;
    }
    .dropdown-menu-horizontal ul li a.active, .dropdown-menu-horizontal ul li a:hover {
        color: @Model.ThemeColor !important;
    }
    .dropdown-menu-horizontal {
        border-top-color: @Model.ThemeColor !important;
    }

    .navbar-default.hr-navigationbar .navbar-nav > .active > a, .navbar-default.hr-navigationbar .navbar-nav > .open > a {
        color: @Model.ThemeColor !important;
    }
</style>