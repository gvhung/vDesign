@using Base.Task.Entities
@model Task

@{
    string panelID = "panel_" + Guid.NewGuid().ToString("N");

    string accID = "acco_" + Guid.NewGuid().ToString("N");
}


<div class="panel-group tsk-info" id="@accID">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                @GetLabel(Model)
                <a title="@Model.Description" data-toggle="collapse" data-parent="#@accID" href="#@panelID" class="collapse-toggle collapsed">
                    <img data-userid="@Model.AssignedTo.ID" class="img-circle many-perf" style="width: 32px; height: 32px; margin-right: 5px;" src="@Html.GetImageSrc(Model.AssignedTo.Image, 32, 32)" alt="..." />
                    @Model.AssignedTo.FullName
                </a>
            </h4>
        </div>
        <div id="@panelID" class="panel-collapse collapse">
            <div class="panel-body">
                <p>
                    <span class="label label-primary">
                        @Model.Status.GetDescription()
                    </span>&nbsp;
                    @Html.Partial("_TaskStatus", Model)
                </p>
                <p style="margin-top: 15px;">
                    <small class="text-muted">
                        <i class="halfling halfling-calendar">&nbsp;</i>@Model.Period.Start.ToShortDateString()&nbsp;
                        @if (Model.Period.End.HasValue)
                        {
                            <i class="halfling halfling-arrow-right"></i>
                            @Model.Period.End.Value.ToShortDateString()
                        }
                    </small>
                </p>
                <p style="color: #999; line-height: 1.428571429;">@*@Html.Raw(Model.Сomment)*@</p>
                <div class="progress">
                    <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="@(Model.PercentComplete * 100)" aria-valuemin="0" aria-valuemax="100" style="width: @(Model.PercentComplete * 100)%">
                        <span>@(Model.PercentComplete * 100)&nbsp;%</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@helper GetLabel(Task t)
{
    string bgColor = "#428bca;";
    string icon = "star";

    switch (t.Status)
    {
        case TaskStatus.New:
            {
                bgColor = "#428bca;";
                icon = "star";
                break;
            }
        case TaskStatus.InProcess:
            {
                bgColor = "#5bc0de;";

                icon = "play";
                break;
            }
        case TaskStatus.Complete:
            {
                bgColor = "#5cb85c;";
                icon = "ok";
                break;
            }
        case TaskStatus.NotRelevant:
            {
                bgColor = "#F0AD4E;";
                icon = "question-sign";
                break;
            }
        case TaskStatus.Viewed:
            {
                bgColor = "#5bc0de;";
                icon = "eye-open";
                break;
            }
        case TaskStatus.Refinement:
            {
                bgColor = "#5bc0de;";
                icon = "question-sign";
                break;
            }
        case TaskStatus.Revise:
            {
                bgColor = "#d9534f";
                icon = "repeat";
                break;
            }
        case TaskStatus.Rework:
            {
                bgColor = "#5bc0de;";
                icon = "ok-sign";
                break;
            }
    }

    <span title="@t.Status.GetDescription()" style="color: @bgColor;" class="tsk-status pull-right halfling halfling-@icon"></span>
}
