@model EditorViewModel

@{
    EditorViewModel eViewModel = Model;
    ViewModelConfig config = eViewModel.ViewModelConfig;


    string htmlFieldName = Model.PropertyName;
    string wrapID = "wrap_" + Guid.NewGuid().ToString("N");

    string lookupProperty = config.LookupPropertyForUI;
}

<div id="@wrapID">
    <ui id="@htmlFieldName">

    </ui>
</div>

<script>
    $(function () {
        var $f = $("#@wrapID").find("#@htmlFieldName");

        var finit = function (objs) {
            if (objs) {
                for (var i = 0; i < objs.length; i++) {
                    var obj = objs[i];

                    $f.append($("<li>").append($("<a href='javascript:void(0)' data-id='" + obj.ID + "'>").html(obj["@lookupProperty"]).click(function () {
                        pbaAPI.openViewModelEx("@config.Mnemonic",
                            {
                                wid: "@wrapID",
                                id: $(this).attr("data-id"),
                                isReadOnly: true
                            });
                    })));
                }
            }
        }

        $f.closest("form").on("onAfterBind", function (e, form) {
            $f.empty();

            @if (eViewModel.DeferredLoading)
            {
            <text>

            var id = form.getPr("ID");

            if (id != 0) {
                $.get(application.url.GetStandart("PropertyKendoUI_CollectionRead", { parentMnemonic: "@eViewModel.ParentViewModelConfig.Mnemonic", mnemonic: "@config.Mnemonic", property: "@htmlFieldName", objectID: id }), function (res) {
                    if (res.error == 0) {
                        finit(res.collection);
                    } else {
                        pbaAPI.errorMsg(res.message);
                    }
                });
            }
            </text>
            }
            else
            {
                @: finit(form.getPr("@htmlFieldName"));
                                    }
        })
    });
</script>
