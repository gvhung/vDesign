@model EditorViewModel

@{
    var eViewModel = Model;
    
    var htmlFieldName = eViewModel.PropertyName;

    var wrapID = "wrap_" + Guid.NewGuid().ToString("N");
}

<script src="~/Scripts/kladr/api-mapsyandex.js"></script>
<link href="~/Content/css/kladr/form_with_map.css" rel="stylesheet" />
<link href="~/Content/css/kladr/jquery.kladr.min.css" rel="stylesheet" />
<script src="~/Scripts/kladr/jquery.kladr.min.js"></script>

<div id="@wrapID">
    <div class="input-group">
        <span class="input-group-btn">
            <button data-open-modal class="btn btn-default" type="button">Открыть</button>
        </span>
        <input type="text" readonly="readonly" class="form-control">
    </div>
</div>

<script id="kladr-template" type="text/x-kendo-template">
    <div id="kladr_@wrapID" class="container-fluid border-boxed">
        <div id="address" class="alert alert-info value" role="alert"></div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label>Страна</label>
                    <div class="input-group" style="margin-bottom: 10px;">
                        <input type="text" data-country class="form-control" readonly="readonly">
                        <div class="input-group-btn">
                            <button data-select-country title="Выбрать страну" type="button" class="btn btn-default" tabindex="-1"><span class="glyphicon glyphicon-align-justify"></span></button>
                            <button data-clear-country title="Очистить" type="button" class="btn btn-default" tabindex="-1"><span class="glyphicon glyphicon-remove"></span></button>
                        </div>
                    </div>
                </div>
                <div class="full-address non-visible">
                    <div class="form-group">
                        <label>Адрес</label>
                        <input class="form-control" type="text">
                    </div>
                </div>

                <div class="js-form-address non-visible">
                    <div class="form-group">
                        <label>Регион</label>
                        <input class="form-control" name="region" type="text">
                    </div>

                    <div class="form-group">
                        <label>Район</label>
                        <input class="form-control" name="district" type="text">
                    </div>
                    <div class="form-group">
                        <label>Город</label>
                        <input class="form-control" name="city" type="text">
                    </div>
                    <div class="form-group">
                        <label>Улица</label>
                        <input class="form-control" name="street" type="text">
                    </div>
                    <div class="form-group">
                        <label>Номер дома</label>
                        <input class="form-control" name="building" type="text">
                    </div>
                </div>
                <div class="addition">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <ul class="js-log">
                                <li id="id" style="display: none;"><span class="name">Код:</span> <span class="value"></span></li>
                                <li id="zip" style="display: none;"><span class="name">Почтовый индекс:</span> <span class="value"></span></li>
                                <li id="name" style="display: none;"><span class="name">Название:</span> <span class="value"></span></li>
                                <li id="type" style="display: none;"><span class="name">Подпись:</span> <span class="value"></span></li>
                                <li id="typeShort" style="display: none;"><span class="name">Подпись коротко:</span> <span class="value"></span></li>
                                <li id="contentType" style="display: none;"><span class="name">Тип объекта:</span> <span class="value"></span>
                                <li id="okato" style="display: none;"><span class="name">ОКАТО:</span> <span class="value"></span>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div style="width: 100%;" id="map_@wrapID" class="panel-map"></div>
            </div>
        </div>
        <hr />
        <div class="pull-right">
            <button data-save class="btn btn-success">Применить</button>
            <button data-close class="btn btn-default">Отменить</button>
        </div>
    </div>
</script>

<style>
    .border-boxed * {
        -webkit-box-sizing: border-box !important;
        -moz-box-sizing: border-box !important;
        box-sizing: border-box !important;
    }

    .non-visible {
        display: none;
    }
</style>

<script>
    (function () {
        var address;
        var country;
        var original;

        $("#@wrapID").closest("form").on("onAfterBind", function (e, form) {
            original = form.getPr("@htmlFieldName");

            address = $.extend({ }, original);

            country = {
                Title: address.CountryTitle,
                NumericCode: address.CountryNumericCode,
            }

            $("#@wrapID input").val(address.FullAddress);
        });

        $("#@wrapID").closest("form").on("onSave", function (e, form) {
            console.log(address);

            form.setPr("@htmlFieldName", address);
        });

        $("#@wrapID [data-open-modal]").click(function () {
            var kendoWindow = $("<div />").kendoWindow({
                width: 1200,
                height: 800,
                maxHeight: 900,
                content: {
                    template: $('#kladr-template').html()
                },
                title: "Инициализатор свойства",
                actions: ["Maximize", "Close"],
                modal: true,
                deactivate: function () {
                    this.destroy();
                },
                refresh: function () {
                    var kladrWnd = this;

                    var $kladr = $('#kladr_@wrapID');

                    if (country.Title == "Россия" || country.NumericCode == 643) {
                        $kladr.find('.js-form-address').removeClass('non-visible');
                    } else {
                        $kladr.find('.full-address').removeClass('non-visible');
                        $kladr.find('.full-address input').val(address.FullAddress);
                    }

                    $kladr.find('[data-select-country]').click(function () {
                        pbaAPI.openModalDialog("Country", function (data) {
                            if (data[0]) {
                                country.Title = data[0].Title;
                                country.NumericCode = data[0].NumericCode;

                                $kladr.find('[data-country]').val(data[0].Title);

                                if (country.Title == "Россия" || country.NumericCode == 643) {
                                    $kladr.find('.js-form-address').removeClass('non-visible');
                                    $kladr.find('.full-address').addClass('non-visible');
                                    $kladr.find('.full-address input').val('');
                                } else {
                                    $kladr.find('.js-form-address').addClass('non-visible');
                                    $kladr.find('.full-address').removeClass('non-visible');
                                }
                            }
                        });
                    });

                    $kladr.find('[data-clear-country]').click(function () {
                        country = {};
                        $kladr.find('[data-country]').val('');
                        $kladr.find('.js-form-address').addClass('non-visible');
                        $kladr.find('.full-address').removeClass('non-visible');

                        $kladr.find('.js-form-address input').val('');
                        log({});
                        addressUpdate();
                        $kladr.find('#address').text('');
                    });

                    $kladr.find('[data-country]').val(country.Title);

                    $kladr.find('[data-save]').click(function () {
                        address.Region.Name = $region.val();
                        address.District.Name = $district.val();
                        address.City.Name = $city.val();
                        address.Street.Name = $street.val();
                        address.Building.Name = $building.val();

                        address.CountryNumericCode = country.NumericCode;
                        address.CountryTitle = country.Title;
                        console.log(country);

                        var withoutCountry = $kladr.find('.full-address input').val();

                        if (withoutCountry) {
                            address.FullAddress = withoutCountry;
                        } else {
                            address.FullAddress = $kladr.find("#address").html();
                        }

                        $("#@wrapID input").val(address.FullAddress);

                        $.kladr.getAddress($kladr, function (objs) {
                            var setValues = function (prop, Prop) {
                                if (objs[prop]) {
                                    address[Prop] = {
                                        ID: objs[prop].id,
                                        ContentType: objs[prop].contentType,
                                        Name: objs[prop].name,
                                        TypeShort: objs[prop].typeShort
                                    };
                                } else {
                                    address[Prop] = {
                                        ID: null,
                                        ContentType: null,
                                        Name: null,
                                        TypeShort: null
                                    }
                                }
                            };

                            setValues('region', 'Region');
                            setValues('district', 'District');
                            setValues('city', 'City');
                            setValues('street', 'Street');
                            setValues('building', 'Building');
                        });

                        kladrWnd.close();
                    });

                    $kladr.find('[data-close]').click(function () {
                        kladrWnd.close();
                    });

                    var $region = $kladr.find('[name="region"]'),
                        $district = $kladr.find('[name="district"]'),
                        $city = $kladr.find('[name="city"]'),
                        $street = $kladr.find('[name="street"]'),
                        $building = $kladr.find('[name="building"]');

                    var map = null,
                        map_created = false;

                    $.kladr.setDefault({
                        parentInput: $kladr.find('.js-form-address'),
                        verify: true,
                        labelFormat: function (obj, query) {
                            var label = '';

                            var name = obj.name.toLowerCase();
                            query = query.name.toLowerCase();

                            var start = name.indexOf(query);
                            start = start > 0 ? start : 0;

                            if (obj.typeShort) {
                                label += obj.typeShort + '. ';
                            }

                            if (query.length < obj.name.length) {
                                label += obj.name.substr(0, start);
                                label += '<strong>' + obj.name.substr(start, query.length) + '</strong>';
                                label += obj.name.substr(start + query.length, obj.name.length - query.length - start);
                            } else {
                                label += '<strong>' + obj.name + '</strong>';
                            }

                            if (obj.parents) {
                                for (var k = obj.parents.length - 1; k > -1; k--) {
                                    var parent = obj.parents[k];
                                    if (parent.name) {
                                        if (label) label += '<small>, </small>';
                                        label += '<small>' + parent.name + ' ' + parent.typeShort + '.</small>';
                                    }
                                }
                            }

                            return label;
                        },
                        select: function (obj) {
                            setLabel($(this), obj.type);
                            log(obj);
                            addressUpdate();
                            mapUpdate();
                        },
                        check: function (obj) {

                            if (obj) {
                                setLabel($(this), obj.type);
                            }

                            log(obj);
                            addressUpdate();
                            mapUpdate();


                        }
                    });

                    $region.kladr('withParents', true);
                    $district.kladr('withParents', true);
                    $city.kladr('withParents', true);
                    $street.kladr('withParents', true);
                    $building.kladr('withParents', true);

                    $building.kladr('verify', false);

                    $region.kladr('type', address.Region.contentType || $.kladr.type.region).val(address.Region.Name);

                    $district.kladr('parentType', address.Region.contentType || $.kladr.type.region);
                    $district.kladr('type', address.District.contentType || $.kladr.type.district).val(address.District.Name);

                    $city.kladr('parentType', address.District.contentType || $.kladr.type.$district);
                    $city.kladr('type', address.City.contentType || $.kladr.type.city).val(address.City.Name);

                    $street.kladr('parentType', address.City.contentType || $.kladr.type.city);
                    $street.kladr('type', address.Street.contentType || $.kladr.type.street).val(address.Street.Name);

                    $district.kladr('parentType', address.Street.contentType || $.kladr.type.street);
                    $building.kladr('type', address.Building.contentType || $.kladr.type.building).val(address.Building.Name);

                    ymaps.ready(function () {
                        if (map_created) return;
                        map_created = true;

                        map = new ymaps.Map('map_@wrapID', {
                            center: [55.76, 37.64],
                            zoom: 12,
                            controls: []
                        });

                        map.controls.add('zoomControl', {
                            position: {
                                right: 10,
                                top: 10
                            }
                        });
                    });

                    function setLabel($input, text) {
                        text = text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();
                        $input.parent().find('label').text(text);
                    }

                    function mapUpdate() {
                        var zoom = 4;

                        var address = $.kladr.getAddress($kladr.find('.js-form-address'), function (objs) {
                            var result = '',
                                name = '',
                                type = '';

                            for (var i in objs) {
                                if (objs.hasOwnProperty(i)) {
                                    if ($.type(objs[i]) === 'object') {
                                        name = objs[i].name;
                                        type = ' ' + objs[i].type;
                                    }
                                    else {
                                        name = objs[i];
                                        type = '';
                                    }

                                    if (result) result += ', ';
                                    result += type + name;

                                    switch (objs[i].contentType) {
                                        case $.kladr.type.region:
                                            zoom = 4;
                                            break;

                                        case $.kladr.type.district:
                                            zoom = 7;
                                            break;

                                        case $.kladr.type.city:
                                            zoom = 10;
                                            break;

                                        case $.kladr.type.street:
                                            zoom = 13;
                                            break;

                                        case $.kladr.type.building:
                                            zoom = 16;
                                            break;
                                    }
                                }
                            }

                            return result;
                        });

                        if (address && map_created) {
                            var geocode = ymaps.geocode(address);
                            geocode.then(function (res) {
                                map.geoObjects.each(function (geoObject) {
                                    map.geoObjects.remove(geoObject);
                                });

                                var position = res.geoObjects.get(0).geometry.getCoordinates(),
                                    placemark = new ymaps.Placemark(position, {}, {});

                                map.geoObjects.add(placemark);
                                map.setCenter(position, zoom);
                            });
                        }
                    }

                    function addressUpdate() {
                        var address = $.kladr.getAddress($kladr.find('.js-form-address'));

                        $kladr.find('#address').text(address);
                    }

                    function log(obj) {
                        var $log, i;

                        $('.js-log li').hide();

                        for (i in obj) {
                            $log = $('#' + i);

                            if ($log.length) {
                                $log.find('.value').text(obj[i]);
                                $log.show();
                            }
                        }
                    }
                }
            });

            var wnd = kendoWindow.data("kendoWindow");
            wnd.center().open();
        });

    })();
</script>
