@model EditorViewModel

@using Newtonsoft.Json

<div id="@Model.UID" class="editor-dashboard">
    <div class="row">
        <div class="col-sm-8">
            <div id="main" class="list-group"></div>
        </div>
        <div class="col-sm-4">
            <div id="sidebar" class="list-group"></div>
        </div>
    </div>
</div>

<script>
    $(function () {
        var $editor = $("#@Model.UID")
        var $form = $editor.closest("form");

        $form.on("onAfterBind", function (e, form) {
            var widgets = form.getPr("Widgets");

            $editor.find("#sidebar").empty();
            $editor.find("#main").empty();

            for (var i = 0; i < widgets.length; i++) {
                var w = widgets[i];

                var $pane = $editor.find("#" + w.PanelName);

                $pane.append($("<a id='" + w.Mnemonic + "' href='#' class='widget list-group-item " + (w.Hidden ? "" : "active") + "'><span class='" + w.Icon + "'></span>&nbsp;&nbsp;" + w.Title + "</a>")
                    .on("click", function () {
                        if ($(this).hasClass("active"))
                            $(this).removeClass("active");
                        else
                            $(this).addClass("active");
                    }));
            }
        });

        $form.on("onSave", function (e, form) {
            if (!form.getPr("Widgets"))
                form.setPr("Widgets", []);

            var prWidgets = form.getPr("Widgets");

            var dicWidgets = {};

            for (var i = 0; i < prWidgets.length; i++) {
                var w = prWidgets[i];

                dicWidgets[w.Mnemonic] = w;
            }

            var resWidgets = [];

            $editor.find("a.widget").each(function () {
                var $w = $(this);

                var w = dicWidgets[$w.attr("id")];

                w.PanelName = $w.parent().attr("id");
                w.Hidden = !$w.hasClass("active");

                resWidgets.push(w);
            });

            form.setPr("Widgets", resWidgets);
        });

        var placeholder = function (element) {
            return element.clone()
                .addClass("placeholder")
                .removeClass("active");
        };

        var hint = function (element) {
            return element.clone()
                .addClass("hint")
                .height(40)
                .width(400).
                css({
                    "text-transform": "uppercase",
                });
        };


        $editor.find("#sidebar").kendoSortable({
            filter: ">a",
            cursor: "move",
            connectWith: "#@Model.UID #main",
            placeholder: placeholder,
            hint: hint,
        });

        $editor.find("#main").kendoSortable({
            filter: ">a",
            cursor: "move",
            connectWith: "#@Model.UID #sidebar",
            placeholder: placeholder,
            hint: hint,
        });
    });
</script>

<style>
    .editor-dashboard {
        font-size: 14px;
        text-transform: uppercase;
    }

        .editor-dashboard #sidebar {
            min-height: 400px;
            border: 1px solid #e1e1e8;
            border-radius: 3px;
        }

        .editor-dashboard #main {
            min-height: 400px;
            border: 1px solid #e1e1e8;
            border-radius: 3px;
        }

        .editor-dashboard .widget {
            margin: 5px;
            border-radius: 3px;
        }

            .editor-dashboard .widget.placeholder {
                color: #555;
                background-color: rgba(223, 240, 216, 0.45);
                -webkit-box-shadow: 0px 0px 5px 0px #5cb85c;
                -moz-box-shadow: 0px 0px 5px 0px #5cb85c;
                box-shadow: 0px 0px 5px 0px #5cb85c;
                background-image: -webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);
                background-image: -o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);
                background-image: linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);
                -webkit-background-size: 40px 40px;
                background-size: 40px 40px;
            }
</style>
